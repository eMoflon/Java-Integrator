module org.xtext.simplejava.GenerateSimpleJava

import org.eclipse.xtext.xtext.generator.*
import org.eclipse.xtext.xtext.generator.model.project.*
import org.eclipse.emf.mwe.utils.StandaloneSetup

var rootPath = ".."

Workflow {
	bean = StandaloneSetup {
		platformUri = "${rootPath}"
		scanClassPath = true
		registerGeneratedEPackage = "org.eclipse.xtext.common.types.TypesPackage"
		registerGenModelFile = "http://www.eclipse.org/xtext/common/JavaVMTypes"
		
		uriMap = {
			to="platform:/resource/org.eclipse.xtext.common.types/model/JavaVMTypes.genmodel"
			from="http://www.eclipse.org/xtext/common/JavaVMTypes"
		}
	}
	component = XtextGenerator {
		configuration = {
			project = StandardProjectConfig {
				baseName = "org.xtext.simplejava"
				rootPath = rootPath
				runtimeTest = {
					enabled = true
				}
				eclipsePlugin = {
					enabled = true
				}
				eclipsePluginTest = {
					enabled = true
				}
				createEclipseMetaData = true
			}
			code = {
				encoding = "windows-1252"
				lineDelimiter = "\r\n"
				fileHeader = "/*\n * generated by Xtext \${version}\n */"
				preferXtendStubs = false
			}
		}
		language = StandardLanguage {
			name = "org.xtext.simplejava.SimpleJava"
			fileExtensions = "simplej"
			referencedResource = "http://www.eclipse.org/xtext/common/JavaVMTypes"
			
			serializer = {
				generateStub = false
			}
			
			formatter = {
				generateStub = true
			}
			validator = {
			// composedCheck = "org.eclipse.xtext.validation.NamesAreUniqueValidator"
			// Generates checks for @Deprecated grammar annotations, an IssueProvider and a corresponding PropertyPage
				generateDeprecationValidation = true
			}
			generator = {
				generateXtendStub = true
			}
			junitSupport = {
				junitVersion = "5"
			}
		}
	}
}