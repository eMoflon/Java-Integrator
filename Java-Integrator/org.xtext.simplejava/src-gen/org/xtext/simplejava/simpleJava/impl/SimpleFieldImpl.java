/**
 * generated by Xtext 2.25.0
 */
package org.xtext.simplejava.simpleJava.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.xtext.common.types.JvmParameterizedTypeReference;

import org.xtext.simplejava.simpleJava.SimpleField;
import org.xtext.simplejava.simpleJava.SimpleJavaPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Simple Field</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.simplejava.simpleJava.impl.SimpleFieldImpl#getAccessType <em>Access Type</em>}</li>
 *   <li>{@link org.xtext.simplejava.simpleJava.impl.SimpleFieldImpl#isIsStatic <em>Is Static</em>}</li>
 *   <li>{@link org.xtext.simplejava.simpleJava.impl.SimpleFieldImpl#isIsFinal <em>Is Final</em>}</li>
 *   <li>{@link org.xtext.simplejava.simpleJava.impl.SimpleFieldImpl#getFieldType <em>Field Type</em>}</li>
 *   <li>{@link org.xtext.simplejava.simpleJava.impl.SimpleFieldImpl#getName <em>Name</em>}</li>
 * </ul>
 *
 * @generated
 */
public class SimpleFieldImpl extends MinimalEObjectImpl.Container implements SimpleField
{
  /**
   * The default value of the '{@link #getAccessType() <em>Access Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAccessType()
   * @generated
   * @ordered
   */
  protected static final String ACCESS_TYPE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getAccessType() <em>Access Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAccessType()
   * @generated
   * @ordered
   */
  protected String accessType = ACCESS_TYPE_EDEFAULT;

  /**
   * The default value of the '{@link #isIsStatic() <em>Is Static</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isIsStatic()
   * @generated
   * @ordered
   */
  protected static final boolean IS_STATIC_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isIsStatic() <em>Is Static</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isIsStatic()
   * @generated
   * @ordered
   */
  protected boolean isStatic = IS_STATIC_EDEFAULT;

  /**
   * The default value of the '{@link #isIsFinal() <em>Is Final</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isIsFinal()
   * @generated
   * @ordered
   */
  protected static final boolean IS_FINAL_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isIsFinal() <em>Is Final</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isIsFinal()
   * @generated
   * @ordered
   */
  protected boolean isFinal = IS_FINAL_EDEFAULT;

  /**
   * The cached value of the '{@link #getFieldType() <em>Field Type</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFieldType()
   * @generated
   * @ordered
   */
  protected JvmParameterizedTypeReference fieldType;

  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SimpleFieldImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SimpleJavaPackage.Literals.SIMPLE_FIELD;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getAccessType()
  {
    return accessType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAccessType(String newAccessType)
  {
    String oldAccessType = accessType;
    accessType = newAccessType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SimpleJavaPackage.SIMPLE_FIELD__ACCESS_TYPE, oldAccessType, accessType));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isIsStatic()
  {
    return isStatic;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setIsStatic(boolean newIsStatic)
  {
    boolean oldIsStatic = isStatic;
    isStatic = newIsStatic;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SimpleJavaPackage.SIMPLE_FIELD__IS_STATIC, oldIsStatic, isStatic));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isIsFinal()
  {
    return isFinal;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setIsFinal(boolean newIsFinal)
  {
    boolean oldIsFinal = isFinal;
    isFinal = newIsFinal;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SimpleJavaPackage.SIMPLE_FIELD__IS_FINAL, oldIsFinal, isFinal));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public JvmParameterizedTypeReference getFieldType()
  {
    return fieldType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetFieldType(JvmParameterizedTypeReference newFieldType, NotificationChain msgs)
  {
    JvmParameterizedTypeReference oldFieldType = fieldType;
    fieldType = newFieldType;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SimpleJavaPackage.SIMPLE_FIELD__FIELD_TYPE, oldFieldType, newFieldType);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFieldType(JvmParameterizedTypeReference newFieldType)
  {
    if (newFieldType != fieldType)
    {
      NotificationChain msgs = null;
      if (fieldType != null)
        msgs = ((InternalEObject)fieldType).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SimpleJavaPackage.SIMPLE_FIELD__FIELD_TYPE, null, msgs);
      if (newFieldType != null)
        msgs = ((InternalEObject)newFieldType).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SimpleJavaPackage.SIMPLE_FIELD__FIELD_TYPE, null, msgs);
      msgs = basicSetFieldType(newFieldType, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SimpleJavaPackage.SIMPLE_FIELD__FIELD_TYPE, newFieldType, newFieldType));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SimpleJavaPackage.SIMPLE_FIELD__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case SimpleJavaPackage.SIMPLE_FIELD__FIELD_TYPE:
        return basicSetFieldType(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SimpleJavaPackage.SIMPLE_FIELD__ACCESS_TYPE:
        return getAccessType();
      case SimpleJavaPackage.SIMPLE_FIELD__IS_STATIC:
        return isIsStatic();
      case SimpleJavaPackage.SIMPLE_FIELD__IS_FINAL:
        return isIsFinal();
      case SimpleJavaPackage.SIMPLE_FIELD__FIELD_TYPE:
        return getFieldType();
      case SimpleJavaPackage.SIMPLE_FIELD__NAME:
        return getName();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SimpleJavaPackage.SIMPLE_FIELD__ACCESS_TYPE:
        setAccessType((String)newValue);
        return;
      case SimpleJavaPackage.SIMPLE_FIELD__IS_STATIC:
        setIsStatic((Boolean)newValue);
        return;
      case SimpleJavaPackage.SIMPLE_FIELD__IS_FINAL:
        setIsFinal((Boolean)newValue);
        return;
      case SimpleJavaPackage.SIMPLE_FIELD__FIELD_TYPE:
        setFieldType((JvmParameterizedTypeReference)newValue);
        return;
      case SimpleJavaPackage.SIMPLE_FIELD__NAME:
        setName((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SimpleJavaPackage.SIMPLE_FIELD__ACCESS_TYPE:
        setAccessType(ACCESS_TYPE_EDEFAULT);
        return;
      case SimpleJavaPackage.SIMPLE_FIELD__IS_STATIC:
        setIsStatic(IS_STATIC_EDEFAULT);
        return;
      case SimpleJavaPackage.SIMPLE_FIELD__IS_FINAL:
        setIsFinal(IS_FINAL_EDEFAULT);
        return;
      case SimpleJavaPackage.SIMPLE_FIELD__FIELD_TYPE:
        setFieldType((JvmParameterizedTypeReference)null);
        return;
      case SimpleJavaPackage.SIMPLE_FIELD__NAME:
        setName(NAME_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SimpleJavaPackage.SIMPLE_FIELD__ACCESS_TYPE:
        return ACCESS_TYPE_EDEFAULT == null ? accessType != null : !ACCESS_TYPE_EDEFAULT.equals(accessType);
      case SimpleJavaPackage.SIMPLE_FIELD__IS_STATIC:
        return isStatic != IS_STATIC_EDEFAULT;
      case SimpleJavaPackage.SIMPLE_FIELD__IS_FINAL:
        return isFinal != IS_FINAL_EDEFAULT;
      case SimpleJavaPackage.SIMPLE_FIELD__FIELD_TYPE:
        return fieldType != null;
      case SimpleJavaPackage.SIMPLE_FIELD__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (accessType: ");
    result.append(accessType);
    result.append(", isStatic: ");
    result.append(isStatic);
    result.append(", isFinal: ");
    result.append(isFinal);
    result.append(", name: ");
    result.append(name);
    result.append(')');
    return result.toString();
  }

} //SimpleFieldImpl
